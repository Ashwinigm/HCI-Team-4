{"version":3,"sources":["events/models/EventModel.js","events/helpers/DateHelper.js","events/views/list-components/card/components/CardDetails.js","events/views/list-components/card/Card.js","events/views/list-components/EventButton.js","events/views/list-components/filter/components/Category.js","events/views/list-components/filter/components/Date.js","events/views/list-components/filter/components/Reset.js","events/views/list-components/filter/components/Size.js","events/views/list-components/filter/components/Time.js","events/views/list-components/filter/components/Venue.js","events/views/list-components/filter/Filter.js","events/views/EventList.js","events/controllers/EventList.js","events/controllers/EventSearch.js"],"names":["DateHelperModel","require","EventModel","rawData","key","searching","filter","data","result","i","length","toLowerCase","includes","dataSearching","replace","area","info","City","details","category","startDate","endDate","venue","size","startTime","endTime","daysOfWeek","getDaysOfWeek","Date","title","start","split","end","startFormat","endFormat","results","count","uniquePost","Set","addIdsIntoUniqueList","ids","add","currentDate","now","j","listOfCurrent","findListOfCurrentDate","arr","weekDay","date","getMonth","getDate","getFullYear","day","month","year","tempDate","setDate","getTime","console","log","currentData","checkIfWithinDate","id","image","getDetails","filterData","states","filteredData","whatToCheck","checkTimeRange","checkSizeRange","filterTime","getHours","setHours","filterSize","actualSize","parseInt","uniqueVenues","Array","from","uniqueCategory","module","exports","daysOfweek","getDay","CardDetails","props","whatToShow","className","charAt","toUpperCase","slice","Card","to","style","maxWidth","maxHeight","src","width","height","objectFit","fontSize","EventButton","href","role","Category","border","transition","onChange","event","setStates","target","value","categories","map","months","days","Reset","onClick","newObj","preventDefault","Size","Time","time","Venue","venues","Filter","tabindex","type","EventList","document","getElementById","innerHTML","text","error","card","useState","setData","setFilterData","setError","useEffect","fetch","then","response","temp","JSON","parse","searchParam","searchData","getAreaData","filtered","generateList","filterTimedData","getVenues","getCategories","EventSearch","useParams"],"mappings":"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","file":"static/js/10.56f344cf.chunk.js","sourcesContent":["//outside models\nconst DateHelperModel = require('../helpers/DateHelper')\n\nconst EventModel = {}\n\nEventModel.searchData = (rawData, key) => {\n  const searching = [\n    'description',\n    'address',\n    'place',\n    'title',\n    'category',\n    'startDate',\n    'endDate',\n    'venue',\n  ]\n  return rawData.filter((data) => {\n    let result = false\n    for (let i = 0; i < searching.length; i += 1) {\n      if (searching[i].toLowerCase().includes('date')) {\n        let dataSearching = data[searching[i]].toLowerCase().replace(\"/\", \"-\")\n        result= result || dataSearching.includes(key.toLowerCase())\n      } else {\n        result =\n          result || data[searching[i]].toLowerCase().includes(key.toLowerCase())\n      }\n    }\n    return result\n  })\n}\n\nEventModel.getAreaData = (rawData, area) => {\n\n  //search for city\n  return rawData.filter((info) => {\n    return info[\"address\"].toLowerCase().includes(area.City.toLowerCase())\n  })\n}\n//page methods\nEventModel.getDetails = (data) => {\n  //gets all the details for the events\n  const details = {\n    category: '',\n    startDate: '',\n    endDate: '',\n    venue: '',\n    size: '',\n    startTime: '',\n    endTime: '',\n    daysOfWeek: [],\n  }\n\n  if (data['category']) {\n    for (let key in details) {\n      if (key === 'daysOfWeek') {\n        details['daysOfWeek'] = DateHelperModel.getDaysOfWeek(\n          new Date(data['startDate']),\n          new Date(data['endDate']),\n        )\n      } else {\n        details[key] = data[key]\n      }\n    }\n  }\n  return details\n}\n\nEventModel.addDateToTitle = (startDate, endDate, title) => {\n  if (startDate) {\n    const start = startDate.split('/')\n    const end = endDate.split('/')\n\n    const startFormat = start[0] + '/' + start[1]\n    const endFormat = end[0] + '/' + end[1]\n\n    if (startFormat === endFormat) {\n      return startFormat + '\\t' + title\n    }\n\n    return startFormat + ' - ' + endFormat + '\\t' + title\n  }\n  return ''\n}\n\n//list methods\nEventModel.generateList = (data) => {\n  let results = []\n  let count = 0\n  let uniquePost = new Set()\n  function addIdsIntoUniqueList(ids) {\n    for (let i = 0; i < ids.length; i += 1) {\n      uniquePost.add(ids[i])\n    }\n  }\n  //generates a list\n  //using current date, keep going down until it hits the amount of post it has\n  //check if that post exist within the date\n  //return an object with the date and an array of the amount of post it has\n\n  if (data.length > 0) {\n    let currentDate = new Date(Date.now())\n    let i = 0 //safety limit\n    let j = 0 //how many days after\n\n    while (i < 365 && j < 20) {\n      const listOfCurrent = EventModel.findListOfCurrentDate(currentDate, data)\n      addIdsIntoUniqueList(listOfCurrent['ids'])\n\n      const arr = listOfCurrent['results']\n\n      //add to the result list if that day has a post\n      if (arr.length > 0) {\n        let result = {\n          data: arr,\n          length: arr.length,\n          weekDay: DateHelperModel.getDaysOfWeek(currentDate, currentDate)[0],\n          date:\n            currentDate.getMonth() +\n            1 +\n            '/' +\n            currentDate.getDate() +\n            '/' +\n            currentDate.getFullYear(),\n          day: currentDate.getDate(),\n          month: currentDate.getMonth(),\n          year: currentDate.getFullYear(),\n        }\n\n        results[count++] = result\n      }\n\n      //safety check\n      const tempDate = new Date(currentDate)\n      currentDate.setDate(currentDate.getDate() + 1)\n      if (tempDate.getTime() === currentDate.getTime()) {\n        console.log('time error in generating list')\n        break\n      }\n\n      //check and give 20 more days after\n      if (uniquePost.size >= data.length) {\n        j += 1\n      }\n\n      i += 1\n    }\n  }\n\n  return results\n}\n\nEventModel.findListOfCurrentDate = (currentDate, data) => {\n  let results = []\n  let ids = []\n  let count = 0 //count in result list\n  let i = 0 //current count\n  while (i < data.length) {\n    const currentData = data[i]\n\n    // console.log(currentData[\"id\"])\n    if (\n      DateHelperModel.checkIfWithinDate(\n        currentDate,\n        new Date(currentData['startDate']),\n        new Date(currentData['endDate']),\n      )\n    ) {\n      ids[count] = currentData['id']\n      results[count++] = {\n        id: currentData['id'],\n        title: currentData['title'],\n        image: currentData['image'],\n        details: EventModel.getDetails(currentData),\n      }\n    }\n    i += 1\n  }\n\n  return { ids: ids, results: results }\n}\n\n//filter\nEventModel.filterData = (filterData, states) => {\n  //for time, find if is between or the active time\n  //for size, find if is within that range\n\n  let filteredData = filterData\n  const whatToCheck = ['category', 'venue', 'size', 'time']\n\n  if (filteredData.length > 0) {\n    for (let key in states) {\n      if (whatToCheck.includes(key)) {\n        if (key === 'time') {\n          if (states[key] !== '') {\n            filteredData = filteredData.filter((data) => {\n              let date = data['startDate']\n              let start = date + ' ' + data['startTime']\n              let end = date + ' ' + data['endTime']\n              let filter = date + ' ' + states['time']\n              return EventModel.checkTimeRange(\n                new Date(start),\n                new Date(end),\n                new Date(filter),\n              )\n            })\n          }\n        } else if (key === 'size') {\n          if (states[key] !== '') {\n            filteredData = filteredData.filter((data) => {\n              return EventModel.checkSizeRange(data['size'], states['size'])\n            })\n          }\n        } else {\n          if (states[key] !== '') {\n            filteredData = filteredData.filter((data) => {\n              return data[key] === states[key]\n            })\n          }\n        }\n      }\n    }\n  }\n\n  return filteredData\n}\n\nEventModel.filterTimedData = (filterData, states) => {\n  let filteredData = filterData\n  const whatToCheck = ['month', 'day', 'year', 'weekDay']\n\n  if (filteredData.length > 0) {\n    for (let key in states) {\n      if (whatToCheck.includes(key)) {\n        if (states[key] !== '') {\n          filteredData = filteredData.filter((data) => {\n            return data[key] == states[key]\n          })\n        }\n      }\n    }\n  }\n\n  return filteredData\n}\n\nEventModel.checkTimeRange = (startTime, endTime, filterTime) => {\n  if (startTime.getHours() === endTime.getHours()) {\n    if (filterTime.getHours() === startTime.getHours()) {\n      return true\n    }\n  } else {\n    while (startTime.getHours() !== endTime.getHours()) {\n      if (filterTime.getHours() === startTime.getHours()) {\n        return true\n      }\n      startTime.setHours(startTime.getHours() + 1)\n    }\n    if (filterTime.getHours() === startTime.getHours()) {\n      return true\n    }\n  }\n\n  return false\n}\n\nEventModel.checkSizeRange = (size, filterSize) => {\n  let actualSize = 0\n  if (size === '>10') {\n    actualSize = 11\n  } else {\n    actualSize = parseInt(size, 10)\n  }\n\n  if (filterSize === 'less than 5 ppl') {\n    return actualSize < 5\n  }\n  if (filterSize === '5 to 9 ppl') {\n    return 5 <= actualSize && actualSize <= 9\n  }\n  if (filterSize === '10 ppl or more') {\n    return actualSize >= 10\n  } else {\n    return false\n  }\n}\n\nEventModel.getVenues = (data) => {\n  let uniqueVenues = new Set()\n\n  if (data) {\n    for (let i = 0; i < data.length; i += 1) {\n      uniqueVenues.add(data[i]['venue'])\n    }\n  }\n\n  return Array.from(uniqueVenues)\n}\n\nEventModel.getCategories = (data) => {\n  let uniqueCategory = new Set()\n\n  if (data) {\n    for (let i = 0; i < data.length; i += 1) {\n      uniqueCategory.add(data[i]['category'])\n    }\n  }\n\n  return Array.from(uniqueCategory)\n}\n\nmodule.exports = EventModel\n","const DateHelperModel = {};\n\nDateHelperModel.checkIfWithinDate = (currentDate, startDate, endDate) => {\n  if (startDate.getTime() === endDate.getTime()) {\n    let year = startDate.getFullYear() === currentDate.getFullYear();\n    let month = startDate.getMonth() === currentDate.getMonth();\n    let day = startDate.getDate() === currentDate.getDate();\n\n    if (year && month && day) {\n      return true;\n    }\n  }\n\n  if (startDate.getTime() !== endDate.getTime()) {\n    while (startDate.getTime() !== endDate.getTime()) {\n      let year = startDate.getFullYear() === currentDate.getFullYear();\n      let month = startDate.getMonth() === currentDate.getMonth();\n      let day = startDate.getDate() === currentDate.getDate();\n\n      if (year && month && day) {\n        return true;\n      }\n      startDate.setDate(startDate.getDate() + 1);\n    }\n\n    //   console.log(currentDate, startDate, endDate)\n    let year = startDate.getFullYear() === currentDate.getFullYear();\n    let month = startDate.getMonth() === currentDate.getMonth();\n    let day = startDate.getDate() === currentDate.getDate();\n\n    if (year && month && day) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\n// part of the code reference from https://www.w3schools.com/jsref/jsref_getday.asp\nDateHelperModel.getDaysOfWeek = (startDate, endDate) => {\n  const daysOfweek = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  let result = [];\n  let i = 0;\n\n  result[i++] = daysOfweek[startDate.getDay()];\n\n  while (startDate.getTime() !== endDate.getTime()) {\n    startDate.setDate(startDate.getDate() + 1);\n    result[i++] = daysOfweek[startDate.getDay()];\n  }\n\n  return result;\n\n  // let test= new Date(\"2021/12/1\")\n  // let test1= new Date(\"2021/12/2\")\n  // console.log(test.setDate(test.getDate() +1))\n  // console.log(test.getDate() === test1.getDate())\n  // console.log(test.getDay())\n  // console.log(test, test1)\n};\n\nmodule.exports = DateHelperModel;\n","export default function CardDetails(props) {\n  const whatToShow = [\"category\", \"venue\", \"size\"];\n  let results = [];\n  let i = 0;\n\n  for (let key in props.details) {\n    if (whatToShow.includes(key)) {\n      results[i++] = (\n        <div key={i} className=\"d-flex flex-wrap text-dark gap-3 me-5\">\n          <div className=\"\">\n            <b>{key.charAt(0).toUpperCase() + key.slice(1).toLowerCase()}:</b>\n          </div>\n          <div className=\"\">{props.details[key]}</div>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div className=\"d-flex flex-column w-100 font-monospace gap-3 fs-6 mt-sm-3\">\n      <div className=\"d-flex flex-wrap gap-3\">{results}</div>\n      <div className=\"d-flex flex-wrap gap-3\">\n        <div className=\"d-flex flex-wrap text-dark gap-3 me-5\">\n          <div className=\"\">\n            <b>Start Time:</b>\n          </div>\n          <div className=\"\">{props.details[\"startTime\"]}</div>\n        </div>\n        <div className=\"d-flex flex-wrap text-dark gap-3 me-5\">\n          <div className=\"\">\n            <b>End Time:</b>\n          </div>\n          <div className=\"\">{props.details[\"endTime\"]}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport CardDetails from \"./components/CardDetails\";\nimport \"./Card.css\";\n\nexport default function Card(props) {\n  const id = props.id;\n  const title = props.title;\n  const details = props.details;\n  const image = props.image;\n\n  return (\n    <div className=\"col-12\">\n      <div className=\"\">\n        <div className=\"row mx-auto\">\n          <Link\n            to={\"/event/\" + id}\n            className=\"col-12 col-sm-4 col-lg-3 col-xxl-2 px-0\"\n            style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\n          >\n            <div className=\"ratio ratio-4x3 \">\n              <img src={\"/images/\" + image} width=\"100%\" height=\"100%\" style={{objectFit: \"scale-down\"}}/>\n            </div>\n          </Link>\n          <Link\n            to={\"/event/\" + id}\n            className=\"text-decoration-none col-12 col-sm-8 col-lg-9 p-0 ps-1 ps-sm-5\"\n          >\n            <div className=\"d-flex flex-column gap-3\">\n              <div className=\"\" style={{ fontSize: \"150%\" }}>\n                {title}\n              </div>\n              <CardDetails details={details} />\n            </div>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { HiLocationMarker } from \"react-icons/hi\";\nimport { Link } from \"react-router-dom\";\nimport { GoSettings } from \"react-icons/go\";\n\nexport default function EventButton(props) {\n  return (\n    <div className=\"d-flex flex-wrap gap-4\">\n      {/* <Link to=\"/event\" className=\"text-decoration-none d-flex flex-column fs-5\">\n        <div className=\"text-center\">\n          <IoArrowBackCircle />\n        </div>\n        <div className=\"\">Events</div>\n      </Link> */}\n      <a\n        data-bs-toggle=\"offcanvas\"\n        href=\"#eventFilter\"\n        role=\"button\"\n        className=\"text-decoration-none d-flex flex-column fs-4\"\n      >\n        <div className=\"text-center\">\n          <GoSettings />\n        </div>\n        <div className=\"\">Filter</div>\n      </a>\n      \n    </div>\n  );\n}\n","export default function Category(props) {\n  return (\n    <div className=\"d-flex flex-column gap-3 fs-5\">\n      <div className=\"fw-bold\">Choose category</div>\n      <select\n        className=\"form-select bg-secondary bg-opacity-25 p-3 ps-2 fs-5\"\n        style={{\n          border: \"none\",\n          transition: \"none\",\n        }}\n        onChange= {(event) => { props.setStates({...props.states, \"category\": event.target.value })}}\n        value={props.states[\"category\"]}\n      >\n        <option value=\"\">Choose</option>\n        {props.categories.map((category => (\n            <option value= {category}>{category}</option>\n        )))}\n      </select>\n    </div>\n  );\n}\n","export default function Date(props) {\n\nlet months= []\nfor(let i=1; i<=12;i+=1){\n    months[i-1]= (<option value={i-1}>{i}</option>)\n}\n\nlet days= []\nfor(let i=1; i<=31;i+=1){\n    days[i-1]= (<option value={i}>{i}</option>)\n}\n\n  return (\n    <div className=\"d-flex flex-column gap-3 fs-5\">\n      <div className=\"fw-bold\">Date (MM DD YY)</div>\n      <div className=\"d-flex flex-wrap gap-3\">\n        <select\n          className=\"form-select bg-secondary bg-opacity-25 p-3 ps-2 fs-5\"\n          style={{\n            border: \"none\",\n            transition: \"none\",\n            width: \"80px\",\n            maxWidth: \"100%\"\n          }}\n          onChange= {(event) => { props.setStates({...props.states, \"month\": event.target.value })}}\n          value={props.states[\"month\"]}\n        >\n          <option value=\"\">MM</option>\n          {months}\n        </select>\n        <select\n          className=\"form-select bg-secondary bg-opacity-25 p-3 ps-2 fs-5\"\n          style={{\n            border: \"none\",\n            transition: \"none\",\n            width: \"80px\",\n            maxWidth: \"100%\"\n          }}\n          onChange= {(event) => { props.setStates({...props.states, \"day\": event.target.value })}}\n          value={props.states[\"day\"]}\n        >\n          <option value=\"\">DD</option>\n          {days}\n        </select>\n        <select\n          className=\"form-select bg-secondary bg-opacity-25 p-3 ps-2 fs-5\"\n          style={{\n            border: \"none\",\n            transition: \"none\",\n            width: \"175px\",\n            maxWidth: \"100%\"\n          }}\n          onChange= {(event) => { props.setStates({...props.states, \"year\": event.target.value })}}\n          value={props.states[\"year\"]}\n        >\n          <option value=\"\">YY</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2022\">2022</option>\n        </select>\n      </div>\n    </div>\n  );\n}\n","export default function Reset(props){\n\n    function ResetAction(event){\n\n        let newObj= {}\n        for(let key in props.states){\n            newObj[key] = \"\"\n        }\n        props.setStates(newObj)\n        event.preventDefault()\n    }\n\n    return(\n        <div className=\"btn btn-primary mt-5 p-3 fs-5 fw-bold\" onClick={ResetAction}>\n            Reset\n        </div>\n    )\n}","export default function Size(props) {\n    return (\n      <div className=\"d-flex flex-column gap-3 fs-5\">\n        <div className=\"fw-bold\">Size</div>\n        <select\n          className=\"form-select bg-secondary bg-opacity-25 p-3 ps-2 fs-5\"\n          style={{\n            border: \"none\",\n            transition: \"none\",\n            width: \"250px\",\n            maxWidth: \"100%\"\n          }}\n          onChange= {(event) => { props.setStates({...props.states, \"size\": event.target.value })}}\n          value={props.states[\"size\"]}\n        >\n          <option value=\"\">Choose</option>\n          <option value=\"less than 5 ppl\">less than 5 ppl</option>\n          <option value=\"5 to 9 ppl\">5 to 9 ppl</option>\n          <option value=\"10 ppl or more\">10 ppl or more</option>\n        </select>\n      </div>\n    );\n  }","export default function Time(props) {\n  let time = [];\n  for (let i = 0; i <= 23; i += 1) {\n    if (i >= 12) {\n      time[i] = <option value={i + \":00\"}>{i}:00 pm</option>;\n    } else {\n      time[i] = <option value={i + \":00\"}>{i}:00 am</option>;\n    }\n  }\n\n  return (\n    <div className=\"d-flex flex-column gap-3 fs-5\">\n      <div className=\"fw-bold\">Active time of event</div>\n      <select\n        className=\"form-select bg-secondary bg-opacity-25 p-3 ps-2 fs-5\"\n        style={{\n          border: \"none\",\n          transition: \"none\",\n          width: \"150px\",\n          maxWidth: \"100%\",\n        }}\n        onChange={(event) => {\n          props.setStates({ ...props.states, time: event.target.value });\n        }}\n        value={props.states[\"time\"]}\n      >\n        <option value=\"\">Choose</option>\n        {time}\n      </select>\n    </div>\n  );\n}\n","export default function Venue(props) {\n  return (\n    <div className=\"d-flex flex-column gap-3 fs-5\">\n      <div className=\"fw-bold\">Venue</div>\n      <select\n        className=\"form-select bg-secondary bg-opacity-25 p-3 ps-2 fs-5\"\n        style={{\n          border: \"none\",\n          transition: \"none\",\n        }}\n        onChange= {(event) => { props.setStates({...props.states, \"venue\": event.target.value })}}\n        value={props.states[\"venue\"]}\n      >\n        <option value=\"\">Choose</option>\n        {props.venues.map((venue => (\n            <option value= {venue}>{venue}</option>\n        )))}\n      </select>\n    </div>\n  );\n}\n","import Category from \"./components/Category\";\nimport Date from \"./components/Date\";\nimport Reset from \"./components/Reset\";\nimport Size from \"./components/Size\";\nimport Time from \"./components/Time\";\nimport Venue from \"./components/Venue\";\n\nexport default function Filter(props) {\n\n  const states = props.states;\n  const setStates = props.setStates;\n\n  return (\n    <div className=\"offcanvas offcanvas-start\" tabindex=\"-1\" id=\"eventFilter\">\n      <div className=\"offcanvas-header\">\n        <div className=\"offcanvas-title fs-1\">\n          Filters\n        </div>\n        <button\n          type=\"button\"\n          className=\"btn-close text-reset fs-4\"\n          data-bs-dismiss=\"offcanvas\"\n          aria-label=\"Close\"\n        ></button>\n      </div>\n      <div className=\"offcanvas-body\">\n        <div className=\"d-flex flex-column gap-4\">\n          <Category categories={props.categories} states={states} setStates={setStates} />\n          <Date states={states} setStates={setStates} />\n          <Time states={states} setStates={setStates} />\n          <Venue states={states} setStates={setStates} venues={props.venues} />\n          <Size states={states} setStates={setStates} />\n          <Reset states={states} setStates={setStates}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import Card from \"./list-components/card/Card\";\nimport EventButton from \"./list-components/EventButton\";\nimport Filter from \"./list-components/filter/Filter\";\n\nexport default function EventList(props) {\n  //changes the title of the page\n  if (document.getElementById(\"pageTitle\")) {\n    document.getElementById(\"pageTitle\").innerHTML = \"4List - \"+props.text;\n  }\n  const data = props.data;\n  return (\n    <div className=\"container-xxl d-flex flex-column gap-4\">\n      {/* title, filter button */}\n      <div className=\"row\">\n        <div className=\"col-12 py-3\">\n          <div className=\"row d-flex align-items-center g-4\">\n            <div className=\"col d-flex flex-wrap align-items-center\">\n              <div className=\"display-5 fw-bold me-auto\">{props.text}</div>\n              <EventButton />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {props.error && (\n        <div className=\"row\">\n          <div className=\"col-12 py-3 fs-1\">\n            No Results found, <a href=\"/event\">Click here to refresh events</a>\n          </div>\n        </div>\n      )}\n      {/* individual dates */}\n      {!props.error &&\n        data.map((info) => (\n          <div key={info[\"date\"]} className=\"row g-4 pb-5\">\n            {/* showing date and then how many was found */}\n            <div className=\"col-12\">\n              <div className=\"row g-3\">\n                <div className=\"col-md-5 fs-3\">\n                  <div className=\"d-flex flex-row gap-4\">\n                    <div className=\"\">{info[\"date\"]}</div>\n                    <div className=\"\">{info[\"weekDay\"]}</div>\n                  </div>\n                </div>\n                <div className=\"col-md-7\">\n                  <div className=\"d-flex flex-wrap gap-2 text-secondary fs-3\">\n                    <div className=\"\">{info[\"length\"]}</div>\n                    <div className=\"\">results found</div>\n                  </div>\n                </div>\n              </div>\n              <hr />\n            </div>\n\n            {/* now show the list of cards */}\n            {info[\"data\"] && (\n              <div className=\"col-12\">\n                <div className=\"row gy-5\">\n                  {info[\"data\"].map((card) => (\n                    <Card\n                      key={card[\"id\"]}\n                      id={card[\"id\"]}\n                      title={card[\"title\"]}\n                      details={card[\"details\"]}\n                      image={card[\"image\"]}\n                    />\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        ))}\n\n      {/* filters */}\n      <Filter\n        venues={props.venues}\n        categories={props.categories}\n        states={props.states}\n        setStates={props.setStates}\n      />\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react'\n\n//view\nimport EventListView from '../views/EventList.js'\n//Model\nconst EventModel = require('../models/EventModel.js')\n\nexport default function EventList(props) {\n  const [data, setData] = useState(() => [])\n  const [filterData, setFilterData] = useState(() => [])\n  const [error, setError] = useState(() => false)\n  const [states, setStates] = useState(() => ({\n    category: '',\n    month: '',\n    day: '',\n    weekDay: '',\n    year: '',\n    time: '',\n    size: '',\n    venue: '',\n  }))\n\n  useEffect(() => {\n    fetch('/db/events.txt')\n      .then((response) => response.text())\n      .then((data) => {\n        // Do something with your data\n        const temp = JSON.parse(data)\n        if (props.searchParam) {\n          let searchData = EventModel.searchData(temp, props.searchParam)\n          searchData= EventModel.getAreaData(searchData, props.area)\n          console.log(searchData)\n          setData(searchData)\n          setFilterData(searchData)\n        } else {\n          let searchData= EventModel.getAreaData(temp, props.area)\n          setData(searchData)\n          setFilterData(searchData)\n        }\n      })\n  }, [props.searchParam, props.area])\n\n  useEffect(() => {\n    //this will take effect as state is being modified by view from user input\n    //filter with raw data first for category, active time, venue, size\n    //2nd filter after list generated, day of week, mm dd yy\n    let filtered = filterData\n    filtered = EventModel.filterData(filtered, states)\n    filtered = EventModel.generateList(filtered)\n    filtered = EventModel.filterTimedData(filtered, states)\n    setData(filtered)\n\n    //show error page when nth was found\n    if (filtered.length > 0) {\n      setError(false)\n    } else {\n      setError(true)\n    }\n  }, [filterData, states])\n\n  const venues = EventModel.getVenues(filterData)\n  const categories = EventModel.getCategories(filterData)\n  let text = 'Events'\n  if (props.searchParam) {\n    text = 'Event Search: ' + props.searchParam\n  }\n\n  return (\n    <EventListView\n      error={error}\n      data={data}\n      venues={venues}\n      categories={categories}\n      states={states}\n      setStates={setStates}\n      text={text}\n    />\n  )\n}\n","import EventList from \"./EventList\"\nimport {useEffect} from \"react\"\nimport { useParams } from \"react-router-dom\"\n\nexport default function EventSearch(props) {\n    const searchParam= useParams()[\"key\"]\n    return <EventList searchParam={searchParam} area={props.area}/>\n}"],"sourceRoot":""}