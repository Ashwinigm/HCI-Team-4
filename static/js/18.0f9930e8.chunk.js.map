{"version":3,"sources":["events/models/EventModel.js","events/helpers/DateHelper.js","events/views/page-components/EventDetail.js","events/views/page-components/EventImage.js","events/views/page-components/EventButton.js","events/views/page-components/EventLocation.js","events/views/page-components/EventUser.js","events/views/page-components/EventTicket.js","events/views/EventPage.js","events/controllers/EventPage.js"],"names":["DateHelperModel","require","EventModel","rawData","key","searching","filter","data","result","i","length","toLowerCase","includes","dataSearching","replace","area","info","City","details","category","startDate","endDate","venue","size","startTime","endTime","daysOfWeek","getDaysOfWeek","Date","title","start","split","end","startFormat","endFormat","results","count","uniquePost","Set","addIdsIntoUniqueList","ids","add","currentDate","now","j","listOfCurrent","findListOfCurrentDate","arr","weekDay","date","getMonth","getDate","getFullYear","day","month","year","tempDate","setDate","getTime","console","log","currentData","checkIfWithinDate","id","image","getDetails","filterData","states","filteredData","whatToCheck","checkTimeRange","checkSizeRange","filterTime","getHours","setHours","filterSize","actualSize","parseInt","uniqueVenues","Array","from","uniqueCategory","module","exports","daysOfweek","getDay","EventDetail","props","detail","className","map","charAt","toUpperCase","slice","EventImage","src","alt","style","objectFit","EventButton","href","to","EventLocation","locDetails","center","googleMapsApiKey","mapContainerStyle","height","width","zoom","position","address","EventUser","showItems","userInfo","user","EventTicket","allPosts","profileImage","name","content","useState","posts","setPosts","onSubmit","text","curDate","EventPage","document","getElementById","innerHTML","description","axios","setData","setCenter","setUser","parameter","useParams","history","useHistory","useEffect","fetch","then","response","temp","JSON","parse","card","temp1","get","params","geometry","location","go","addDateToTitle","place","parking"],"mappings":"oFACA,IAAMA,EAAkBC,EAAQ,KAE1BC,EAAa,CAEnBA,WAAwB,SAACC,EAASC,GAChC,IAAMC,EAAY,CAChB,cACA,UACA,QACA,QACA,WACA,YACA,UACA,SAEF,OAAOF,EAAQG,QAAO,SAACC,GAErB,IADA,IAAIC,GAAS,EACJC,EAAI,EAAGA,EAAIJ,EAAUK,OAAQD,GAAK,EACzC,GAAIJ,EAAUI,GAAGE,cAAcC,SAAS,QAAS,CAC/C,IAAIC,EAAgBN,EAAKF,EAAUI,IAAIE,cAAcG,QAAQ,IAAK,KAClEN,EAAQA,GAAUK,EAAcD,SAASR,EAAIO,oBAE7CH,EACEA,GAAUD,EAAKF,EAAUI,IAAIE,cAAcC,SAASR,EAAIO,eAG9D,OAAOH,MAIXN,YAAyB,SAACC,EAASY,GAGjC,OAAOZ,EAAQG,QAAO,SAACU,GACrB,OAAOA,EAAI,QAAYL,cAAcC,SAASG,EAAKE,KAAKN,mBAI5DT,WAAwB,SAACK,GAEvB,IAAMW,EAAU,CACdC,SAAU,GACVC,UAAW,GACXC,QAAS,GACTC,MAAO,GACPC,KAAM,GACNC,UAAW,GACXC,QAAS,GACTC,WAAY,IAGd,GAAInB,EAAI,SACN,IAAK,IAAIH,KAAOc,EACF,eAARd,EACFc,EAAO,WAAiBlB,EAAgB2B,cACtC,IAAIC,KAAKrB,EAAI,WACb,IAAIqB,KAAKrB,EAAI,UAGfW,EAAQd,GAAOG,EAAKH,GAI1B,OAAOc,GAGThB,eAA4B,SAACkB,EAAWC,EAASQ,GAC/C,GAAIT,EAAW,CACb,IAAMU,EAAQV,EAAUW,MAAM,KACxBC,EAAMX,EAAQU,MAAM,KAEpBE,EAAcH,EAAM,GAAK,IAAMA,EAAM,GACrCI,EAAYF,EAAI,GAAK,IAAMA,EAAI,GAErC,OAAIC,IAAgBC,EACXD,EAAc,KAAOJ,EAGvBI,EAAc,MAAQC,EAAY,KAAOL,EAElD,MAAO,IAIT3B,aAA0B,SAACK,GACzB,IAAI4B,EAAU,GACVC,EAAQ,EACRC,EAAa,IAAIC,IACrB,SAASC,EAAqBC,GAC5B,IAAK,IAAI/B,EAAI,EAAGA,EAAI+B,EAAI9B,OAAQD,GAAK,EACnC4B,EAAWI,IAAID,EAAI/B,IAQvB,GAAIF,EAAKG,OAAS,EAKhB,IAJA,IAAIgC,EAAc,IAAId,KAAKA,KAAKe,OAC5BlC,EAAI,EACJmC,EAAI,EAEDnC,EAAI,KAAOmC,EAAI,IAAI,CACxB,IAAMC,EAAgB3C,EAAW4C,sBAAsBJ,EAAanC,GACpEgC,EAAqBM,EAAa,KAElC,IAAME,EAAMF,EAAa,QAGzB,GAAIE,EAAIrC,OAAS,EAAG,CAClB,IAAIF,EAAS,CACXD,KAAMwC,EACNrC,OAAQqC,EAAIrC,OACZsC,QAAShD,EAAgB2B,cAAce,EAAaA,GAAa,GACjEO,KACEP,EAAYQ,WACZ,EACA,IACAR,EAAYS,UACZ,IACAT,EAAYU,cACdC,IAAKX,EAAYS,UACjBG,MAAOZ,EAAYQ,WACnBK,KAAMb,EAAYU,eAGpBjB,EAAQC,KAAW5B,EAIrB,IAAMgD,EAAW,IAAI5B,KAAKc,GAE1B,GADAA,EAAYe,QAAQf,EAAYS,UAAY,GACxCK,EAASE,YAAchB,EAAYgB,UAAW,CAChDC,QAAQC,IAAI,iCACZ,MAIEvB,EAAWd,MAAQhB,EAAKG,SAC1BkC,GAAK,GAGPnC,GAAK,EAIT,OAAO0B,GAGTjC,sBAAmC,SAACwC,EAAanC,GAK/C,IAJA,IAAI4B,EAAU,GACVK,EAAM,GACNJ,EAAQ,EACR3B,EAAI,EACDA,EAAIF,EAAKG,QAAQ,CACtB,IAAMmD,EAActD,EAAKE,GAIvBT,EAAgB8D,kBACdpB,EACA,IAAId,KAAKiC,EAAW,WACpB,IAAIjC,KAAKiC,EAAW,YAGtBrB,EAAIJ,GAASyB,EAAW,GACxB1B,EAAQC,KAAW,CACjB2B,GAAIF,EAAW,GACfhC,MAAOgC,EAAW,MAClBG,MAAOH,EAAW,MAClB3C,QAAShB,EAAW+D,WAAWJ,KAGnCpD,GAAK,EAGP,MAAO,CAAE+B,IAAKA,EAAKL,QAASA,IAI9BjC,WAAwB,SAACgE,EAAYC,GAInC,IAAIC,EAAeF,EACbG,EAAc,CAAC,WAAY,QAAS,OAAQ,QAElD,GAAID,EAAa1D,OAAS,EAAG,CAAC,IAAD,WAClBN,GACHiE,EAAYzD,SAASR,KACX,SAARA,EACkB,KAAhB+D,EAAO/D,KACTgE,EAAeA,EAAa9D,QAAO,SAACC,GAClC,IAAI0C,EAAO1C,EAAI,UACXuB,EAAQmB,EAAO,IAAM1C,EAAI,UACzByB,EAAMiB,EAAO,IAAM1C,EAAI,QACvBD,EAAS2C,EAAO,IAAMkB,EAAM,KAChC,OAAOjE,EAAWoE,eAChB,IAAI1C,KAAKE,GACT,IAAIF,KAAKI,GACT,IAAIJ,KAAKtB,QAIE,SAARF,EACW,KAAhB+D,EAAO/D,KACTgE,EAAeA,EAAa9D,QAAO,SAACC,GAClC,OAAOL,EAAWqE,eAAehE,EAAI,KAAU4D,EAAM,UAIrC,KAAhBA,EAAO/D,KACTgE,EAAeA,EAAa9D,QAAO,SAACC,GAClC,OAAOA,EAAKH,KAAS+D,EAAO/D,SAzBtC,IAAK,IAAIA,KAAO+D,EAAS,EAAhB/D,GAiCX,OAAOgE,GAGTlE,gBAA6B,SAACgE,EAAYC,GACxC,IAAIC,EAAeF,EACbG,EAAc,CAAC,QAAS,MAAO,OAAQ,WAE7C,GAAID,EAAa1D,OAAS,EAAG,CAAC,IAAD,WAClBN,GACHiE,EAAYzD,SAASR,IACH,KAAhB+D,EAAO/D,KACTgE,EAAeA,EAAa9D,QAAO,SAACC,GAClC,OAAOA,EAAKH,IAAQ+D,EAAO/D,QAJnC,IAAK,IAAIA,KAAO+D,EAAS,EAAhB/D,GAWX,OAAOgE,GAGTlE,eAA4B,SAACsB,EAAWC,EAAS+C,GAC/C,GAAIhD,EAAUiD,aAAehD,EAAQgD,YACnC,GAAID,EAAWC,aAAejD,EAAUiD,WACtC,OAAO,MAEJ,CACL,KAAOjD,EAAUiD,aAAehD,EAAQgD,YAAY,CAClD,GAAID,EAAWC,aAAejD,EAAUiD,WACtC,OAAO,EAETjD,EAAUkD,SAASlD,EAAUiD,WAAa,GAE5C,GAAID,EAAWC,aAAejD,EAAUiD,WACtC,OAAO,EAIX,OAAO,GAGTvE,eAA4B,SAACqB,EAAMoD,GACjC,IAAIC,EAAa,EAOjB,OALEA,EADW,QAATrD,EACW,GAEAsD,SAAStD,EAAM,IAGX,oBAAfoD,EACKC,EAAa,EAEH,eAAfD,EACK,GAAKC,GAAcA,GAAc,EAEvB,mBAAfD,GACKC,GAAc,IAMzB1E,UAAuB,SAACK,GACtB,IAAIuE,EAAe,IAAIxC,IAEvB,GAAI/B,EACF,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,GAAK,EACpCqE,EAAarC,IAAIlC,EAAKE,GAAL,OAIrB,OAAOsE,MAAMC,KAAKF,IAGpB5E,cAA2B,SAACK,GAC1B,IAAI0E,EAAiB,IAAI3C,IAEzB,GAAI/B,EACF,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,GAAK,EACpCwE,EAAexC,IAAIlC,EAAKE,GAAL,UAIvB,OAAOsE,MAAMC,KAAKC,KAGpBC,EAAOC,QAAUjF,G,kBCtTjB,IAAMF,EAAkB,CAExBA,kBAAoC,SAAC0C,EAAatB,EAAWC,GAC3D,GAAID,EAAUsC,YAAcrC,EAAQqC,UAAW,CAC7C,IAAIH,EAAOnC,EAAUgC,gBAAkBV,EAAYU,cAC/CE,EAAQlC,EAAU8B,aAAeR,EAAYQ,WAC7CG,EAAMjC,EAAU+B,YAAcT,EAAYS,UAE9C,GAAII,GAAQD,GAASD,EACnB,OAAO,EAIX,GAAIjC,EAAUsC,YAAcrC,EAAQqC,UAAW,CAC7C,KAAOtC,EAAUsC,YAAcrC,EAAQqC,WAAW,CAChD,IAAIH,EAAOnC,EAAUgC,gBAAkBV,EAAYU,cAC/CE,EAAQlC,EAAU8B,aAAeR,EAAYQ,WAC7CG,EAAMjC,EAAU+B,YAAcT,EAAYS,UAE9C,GAAII,GAAQD,GAASD,EACnB,OAAO,EAETjC,EAAUqC,QAAQrC,EAAU+B,UAAY,GAI1C,IAAII,EAAOnC,EAAUgC,gBAAkBV,EAAYU,cAC/CE,EAAQlC,EAAU8B,aAAeR,EAAYQ,WAC7CG,EAAMjC,EAAU+B,YAAcT,EAAYS,UAE9C,GAAII,GAAQD,GAASD,EACnB,OAAO,EAIX,OAAO,GAITrD,cAAgC,SAACoB,EAAWC,GAC1C,IAAM+D,EAAa,CACjB,SACA,SACA,UACA,YACA,WACA,SACA,YAEE5E,EAAS,GACTC,EAAI,EAIR,IAFAD,EAAOC,KAAO2E,EAAWhE,EAAUiE,UAE5BjE,EAAUsC,YAAcrC,EAAQqC,WACrCtC,EAAUqC,QAAQrC,EAAU+B,UAAY,GACxC3C,EAAOC,KAAO2E,EAAWhE,EAAUiE,UAGrC,OAAO7E,IAUT0E,EAAOC,QAAUnF,G,oICrEF,SAASsF,EAAYC,GAClC,IAAIpD,EAAU,GACV1B,EAAI,EAER,IAAK,IAAIL,KAAOmF,EAAMC,OAElBrD,EAAQ1B,KADE,eAARL,EAEA,sBAAKqF,UAAU,6CAAf,UACE,qBAAKA,UAAU,GAAf,SACE,6CAEF,qBAAKA,UAAU,yBAAf,SACGF,EAAMC,OAAOpF,GAAKsF,KAAI,SAACrC,GAAD,OACrB,qBAAKoC,UAAU,GAAf,SAAmBpC,YAOzB,sBAAKoC,UAAU,6CAAf,UACE,qBAAKA,UAAU,GAAf,SACE,8BAAIrF,EAAIuF,OAAO,GAAGC,cAAgBxF,EAAIyF,MAAM,GAAGlF,cAA/C,SAEF,qBAAK8E,UAAU,GAAf,SAAmBF,EAAMC,OAAOpF,QAMxC,OAAO,qBAAKqF,UAAU,6CAAf,SAA6DtD,IC7BvD,SAAS2D,EAAWP,GAC/B,OACI,qBAAKE,UAAU,kBAAf,SACI,qBAAKM,IAAKR,EAAMvB,MAAOgC,IAAI,QAAQC,MAAO,CAACC,UAAW,e,uCCEnD,SAASC,EAAYZ,GAElC,OACE,sBAAKE,UAAU,yBAAf,UACE,oBAAGW,KAAK,QAAQX,UAAU,+CAA1B,UACE,qBAAKA,UAAU,cAAf,SACE,cAAC,IAAD,MAEF,qBAAKA,UAAU,GAAf,yBAEF,oBAAGW,KAAK,eAAeX,UAAU,+CAAjC,UACE,qBAAKA,UAAU,cAAf,SACE,cAAC,IAAD,MAEF,qBAAKA,UAAU,GAAf,4BAEF,oBAAGW,KAAK,YAAYX,UAAU,+CAA9B,UACE,qBAAKA,UAAU,cAAf,SACE,cAAC,IAAD,MAEF,qBAAKA,UAAU,GAAf,yBAEF,eAAC,IAAD,CAAMY,GAAG,SAASZ,UAAU,+CAA5B,UACE,qBAAKA,UAAU,cAAf,SACE,cAAC,IAAD,MAEF,qBAAKA,UAAU,GAAf,0B,aC9BO,SAASa,EAAcf,GACpC,IAKIgB,EAAa,GACb9F,EAAI,EACR,IAAK,IAAIL,KAAOmF,EAAMgB,WACpBA,EAAW9F,KAAM,sBAAKgF,UAAU,yBAAf,UACf,sBAAKA,UAAU,UAAf,UAA0BrF,EAAIuF,OAAO,GAAGC,cAAgBxF,EAAIyF,MAAM,GAAGlF,cAArE,OACA,qBAAK8E,UAAU,GAAf,SAAmBF,EAAMgB,WAAWnG,QAIxC,OACE,sBAAKqF,UAAU,eAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,kBAAf,SACGF,EAAMiB,QACL,cAAC,IAAD,CAAYC,iBAAiB,0CAA7B,SACE,cAAC,IAAD,CACEC,kBArBI,CAChBC,OAAQ,OACRC,MAAO,QAoBKC,KAAM,GACNL,OAAQjB,EAAMiB,OAHhB,SAKE,cAAC,IAAD,CAA4BM,SAAUvB,EAAMiB,QAA/BjB,EAAMwB,iBAU7B,qBAAKtB,UAAU,WAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,sBAAKA,UAAU,yBAAf,UACE,qBAAKA,UAAU,UAAf,uBACA,qBAAKA,UAAU,GAAf,SAAmBF,EAAMwB,aAE1BR,UC5CI,SAASS,EAAUzB,GAChC,IAAM0B,EAAY,CAAC,OAAQ,QAAS,SAEhCC,EAAW,GAEf,GAAI3B,EAAM4B,KACR,IAAK,IAAI1G,EAAI,EAAGA,EAAIwG,EAAUvG,OAAQD,GAAK,EAAG,CAC5C,IAAIL,EAAM6G,EAAUxG,GACpByG,EAASzG,GACP,sBAAKgF,UAAU,mCAAf,UACE,sBAAKA,UAAU,UAAf,UACGrF,EAAIuF,OAAO,GAAGC,cAAgBxF,EAAIyF,MAAM,GAAGlF,cAD9C,OAGA,qBAAK8E,UAAU,GAAf,SAAmBF,EAAM4B,KAAK/G,QAMtC,OACE,sBAAKqF,UAAU,gCAAf,UACE,qBAAKA,UAAU,yBAAf,SACE,qBAAKA,UAAU,iBAAf,6BAEF,oBAAIA,UAAU,YACd,qBAAKA,UAAU,mBAAf,SAAmCyB,IACnC,qBAAKzB,UAAU,oBAAf,yD,qBCyBS2B,G,OA5CK,WAElB,IAAMC,EAAW,CACf,CACEC,aACE,uFACFC,KAAM,WACNC,QAAS,uEACTvE,KAAM,IAAIrB,KAAK,6BAEjB,CACE0F,aACE,yGACFC,KAAM,WACNC,QACE,kEACFvE,KAAM,IAAIrB,KAAK,8BAInB,EAA0B6F,mBAASJ,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAiBA,OACE,qBAAKlC,UAAU,MAAf,SACE,cAAC,IAAD,CAAiBiC,MAAOA,EAAOE,SAjBhB,SAACC,GAClB,IAAMC,EAAU,IAAIlG,KAEpB+F,EAAS,GAAD,mBACHD,GADG,CAEN,CACEJ,aACE,yGACFC,KAAM,WACNC,QAASK,EACT5E,KAAM6E,aC/BC,SAASC,EAAUxC,GAMhC,OAHIyC,SAASC,eAAe,eAC1BD,SAASC,eAAe,aAAaC,UAAY,WAAa3C,EAAM1D,OAGpE,sBAAK4D,UAAU,yCAAf,UACE,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,eAAf,SAA+BF,EAAM1D,UAEvC,qBAAK4D,UAAU,WAAf,SACE,qBAAKA,UAAU,gCAAf,SACE,cAACU,EAAD,WAIN,qBAAKV,UAAU,MAAf,SACE,qBAAKA,UAAU,SAAf,SACE,cAACH,EAAD,CAAaE,OAAQD,EAAMrE,cAG/B,uBACA,sBAAKuE,UAAU,eAAe1B,GAAG,cAAjC,UACE,qBAAK0B,UAAU,WAAf,SACE,cAACK,EAAD,CAAY9B,MAAOuB,EAAMvB,UAE3B,qBAAKyB,UAAU,WAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,oBAAf,SAAoCF,EAAM4C,qBAIhD,qBAAK1C,UAAU,eAAe1B,GAAG,WAAjC,SACE,qBAAK0B,UAAU,SAAf,SACE,cAACa,EAAD,CACES,QAASxB,EAAMwB,QACfR,WAAYhB,EAAMgB,WAClBC,OAAQjB,EAAMiB,OACdhB,OAAQD,EAAMrE,cAIpB,qBAAKuE,UAAU,eAAe1B,GAAG,OAAjC,SACE,qBAAK0B,UAAU,cAAf,SACE,cAACuB,EAAD,CAAWG,KAAM5B,EAAM4B,WAG3B,qBAAK1B,UAAU,eAAe1B,GAAG,OAAjC,SACE,qBAAK0B,UAAU,cAAf,mCAIF,cAAC,EAAD,OCvDN,IAAM2C,EAAQnI,EAAQ,KAChBC,EAAaD,EAAQ,KAEZ,SAAS8H,IACtB,MAAwBN,oBAAS,iBAAM,MAAvC,mBAAOlH,EAAP,KAAa8H,EAAb,KACA,EAA4BZ,oBAAS,kBAAM,QAA3C,mBAAOjB,EAAP,KAAe8B,EAAf,KACA,EAAwBb,oBAAS,kBAAM,QAAvC,mBAAON,EAAP,KAAaoB,EAAb,KACMC,EAAYC,cAAS,GACrBC,EAAUC,cA4ChB,GA1CAC,qBAAU,WACRC,MAAM,kBACHC,MAAK,SAACC,GAAD,OAAcA,EAASlB,UAC5BiB,MAAK,SAACvI,GAEL,IAAMyI,EAAOC,KAAKC,MAAM3I,GAAMD,QAAO,SAAC6I,GACpC,OAAOA,EAAI,KAAWX,KACrB,GAEHH,EAAQW,GACR,IAAMjC,EAAUiC,EAAI,QAGpBH,MAAM,iBACHC,MAAK,SAACC,GAAD,OAAcA,EAASlB,UAC5BiB,MAAK,SAACvI,GAEL,IAAM6I,EAAQH,KAAKC,MAAM3I,GAAMD,QAAO,SAAC6I,GACrC,OAAOA,EAAI,SAAeH,EAAI,UAC7B,GACHT,EAAQa,MAQZhB,EACGiB,IAAI,oDAAqD,CACxDC,OAAQ,CACNvC,QAASA,EACT3G,IAAK,6CAGR0I,MAAK,SAAUC,GACdT,EAAUS,EAASxI,KAAK4B,QAAQ,GAAGoH,SAASC,kBAGnD,CAAChB,KAGCjI,EAEH,OADAmI,EAAQ5H,QAAQ,UACT4H,EAAQe,GAAG,GAIpB,IAAM1F,EAAIxD,EAAI,GACRyD,EAAQ,WAAazD,EAAI,MACzBW,EAAUhB,EAAW+D,WAAW1D,GAChCsB,EAAQ3B,EAAWwJ,eAAenJ,EAAI,UAAeA,EAAI,QAAaA,EAAI,OAC1E4H,EAAc5H,EAAI,YAClBwG,EAAUxG,EAAI,QACdgG,EAAa,CAAEoD,MAAOpJ,EAAI,MAAWqJ,QAASrJ,EAAI,SAExD,OACE,cAACwH,EAAD,CACEhE,GAAIA,EACJlC,MAAOA,EACPX,QAASA,EACTiH,YAAaA,EACbpB,QAASA,EACT/C,MAAOA,EACPwC,OAAQA,EACRD,WAAYA,EACZY,KAAMA","file":"static/js/18.0f9930e8.chunk.js","sourcesContent":["//outside models\nconst DateHelperModel = require('../helpers/DateHelper')\n\nconst EventModel = {}\n\nEventModel.searchData = (rawData, key) => {\n  const searching = [\n    'description',\n    'address',\n    'place',\n    'title',\n    'category',\n    'startDate',\n    'endDate',\n    'venue',\n  ]\n  return rawData.filter((data) => {\n    let result = false\n    for (let i = 0; i < searching.length; i += 1) {\n      if (searching[i].toLowerCase().includes('date')) {\n        let dataSearching = data[searching[i]].toLowerCase().replace(\"/\", \"-\")\n        result= result || dataSearching.includes(key.toLowerCase())\n      } else {\n        result =\n          result || data[searching[i]].toLowerCase().includes(key.toLowerCase())\n      }\n    }\n    return result\n  })\n}\n\nEventModel.getAreaData = (rawData, area) => {\n\n  //search for city\n  return rawData.filter((info) => {\n    return info[\"address\"].toLowerCase().includes(area.City.toLowerCase())\n  })\n}\n//page methods\nEventModel.getDetails = (data) => {\n  //gets all the details for the events\n  const details = {\n    category: '',\n    startDate: '',\n    endDate: '',\n    venue: '',\n    size: '',\n    startTime: '',\n    endTime: '',\n    daysOfWeek: [],\n  }\n\n  if (data['category']) {\n    for (let key in details) {\n      if (key === 'daysOfWeek') {\n        details['daysOfWeek'] = DateHelperModel.getDaysOfWeek(\n          new Date(data['startDate']),\n          new Date(data['endDate']),\n        )\n      } else {\n        details[key] = data[key]\n      }\n    }\n  }\n  return details\n}\n\nEventModel.addDateToTitle = (startDate, endDate, title) => {\n  if (startDate) {\n    const start = startDate.split('/')\n    const end = endDate.split('/')\n\n    const startFormat = start[0] + '/' + start[1]\n    const endFormat = end[0] + '/' + end[1]\n\n    if (startFormat === endFormat) {\n      return startFormat + '\\t' + title\n    }\n\n    return startFormat + ' - ' + endFormat + '\\t' + title\n  }\n  return ''\n}\n\n//list methods\nEventModel.generateList = (data) => {\n  let results = []\n  let count = 0\n  let uniquePost = new Set()\n  function addIdsIntoUniqueList(ids) {\n    for (let i = 0; i < ids.length; i += 1) {\n      uniquePost.add(ids[i])\n    }\n  }\n  //generates a list\n  //using current date, keep going down until it hits the amount of post it has\n  //check if that post exist within the date\n  //return an object with the date and an array of the amount of post it has\n\n  if (data.length > 0) {\n    let currentDate = new Date(Date.now())\n    let i = 0 //safety limit\n    let j = 0 //how many days after\n\n    while (i < 365 && j < 20) {\n      const listOfCurrent = EventModel.findListOfCurrentDate(currentDate, data)\n      addIdsIntoUniqueList(listOfCurrent['ids'])\n\n      const arr = listOfCurrent['results']\n\n      //add to the result list if that day has a post\n      if (arr.length > 0) {\n        let result = {\n          data: arr,\n          length: arr.length,\n          weekDay: DateHelperModel.getDaysOfWeek(currentDate, currentDate)[0],\n          date:\n            currentDate.getMonth() +\n            1 +\n            '/' +\n            currentDate.getDate() +\n            '/' +\n            currentDate.getFullYear(),\n          day: currentDate.getDate(),\n          month: currentDate.getMonth(),\n          year: currentDate.getFullYear(),\n        }\n\n        results[count++] = result\n      }\n\n      //safety check\n      const tempDate = new Date(currentDate)\n      currentDate.setDate(currentDate.getDate() + 1)\n      if (tempDate.getTime() === currentDate.getTime()) {\n        console.log('time error in generating list')\n        break\n      }\n\n      //check and give 20 more days after\n      if (uniquePost.size >= data.length) {\n        j += 1\n      }\n\n      i += 1\n    }\n  }\n\n  return results\n}\n\nEventModel.findListOfCurrentDate = (currentDate, data) => {\n  let results = []\n  let ids = []\n  let count = 0 //count in result list\n  let i = 0 //current count\n  while (i < data.length) {\n    const currentData = data[i]\n\n    // console.log(currentData[\"id\"])\n    if (\n      DateHelperModel.checkIfWithinDate(\n        currentDate,\n        new Date(currentData['startDate']),\n        new Date(currentData['endDate']),\n      )\n    ) {\n      ids[count] = currentData['id']\n      results[count++] = {\n        id: currentData['id'],\n        title: currentData['title'],\n        image: currentData['image'],\n        details: EventModel.getDetails(currentData),\n      }\n    }\n    i += 1\n  }\n\n  return { ids: ids, results: results }\n}\n\n//filter\nEventModel.filterData = (filterData, states) => {\n  //for time, find if is between or the active time\n  //for size, find if is within that range\n\n  let filteredData = filterData\n  const whatToCheck = ['category', 'venue', 'size', 'time']\n\n  if (filteredData.length > 0) {\n    for (let key in states) {\n      if (whatToCheck.includes(key)) {\n        if (key === 'time') {\n          if (states[key] !== '') {\n            filteredData = filteredData.filter((data) => {\n              let date = data['startDate']\n              let start = date + ' ' + data['startTime']\n              let end = date + ' ' + data['endTime']\n              let filter = date + ' ' + states['time']\n              return EventModel.checkTimeRange(\n                new Date(start),\n                new Date(end),\n                new Date(filter),\n              )\n            })\n          }\n        } else if (key === 'size') {\n          if (states[key] !== '') {\n            filteredData = filteredData.filter((data) => {\n              return EventModel.checkSizeRange(data['size'], states['size'])\n            })\n          }\n        } else {\n          if (states[key] !== '') {\n            filteredData = filteredData.filter((data) => {\n              return data[key] === states[key]\n            })\n          }\n        }\n      }\n    }\n  }\n\n  return filteredData\n}\n\nEventModel.filterTimedData = (filterData, states) => {\n  let filteredData = filterData\n  const whatToCheck = ['month', 'day', 'year', 'weekDay']\n\n  if (filteredData.length > 0) {\n    for (let key in states) {\n      if (whatToCheck.includes(key)) {\n        if (states[key] !== '') {\n          filteredData = filteredData.filter((data) => {\n            return data[key] == states[key]\n          })\n        }\n      }\n    }\n  }\n\n  return filteredData\n}\n\nEventModel.checkTimeRange = (startTime, endTime, filterTime) => {\n  if (startTime.getHours() === endTime.getHours()) {\n    if (filterTime.getHours() === startTime.getHours()) {\n      return true\n    }\n  } else {\n    while (startTime.getHours() !== endTime.getHours()) {\n      if (filterTime.getHours() === startTime.getHours()) {\n        return true\n      }\n      startTime.setHours(startTime.getHours() + 1)\n    }\n    if (filterTime.getHours() === startTime.getHours()) {\n      return true\n    }\n  }\n\n  return false\n}\n\nEventModel.checkSizeRange = (size, filterSize) => {\n  let actualSize = 0\n  if (size === '>10') {\n    actualSize = 11\n  } else {\n    actualSize = parseInt(size, 10)\n  }\n\n  if (filterSize === 'less than 5 ppl') {\n    return actualSize < 5\n  }\n  if (filterSize === '5 to 9 ppl') {\n    return 5 <= actualSize && actualSize <= 9\n  }\n  if (filterSize === '10 ppl or more') {\n    return actualSize >= 10\n  } else {\n    return false\n  }\n}\n\nEventModel.getVenues = (data) => {\n  let uniqueVenues = new Set()\n\n  if (data) {\n    for (let i = 0; i < data.length; i += 1) {\n      uniqueVenues.add(data[i]['venue'])\n    }\n  }\n\n  return Array.from(uniqueVenues)\n}\n\nEventModel.getCategories = (data) => {\n  let uniqueCategory = new Set()\n\n  if (data) {\n    for (let i = 0; i < data.length; i += 1) {\n      uniqueCategory.add(data[i]['category'])\n    }\n  }\n\n  return Array.from(uniqueCategory)\n}\n\nmodule.exports = EventModel\n","const DateHelperModel = {};\n\nDateHelperModel.checkIfWithinDate = (currentDate, startDate, endDate) => {\n  if (startDate.getTime() === endDate.getTime()) {\n    let year = startDate.getFullYear() === currentDate.getFullYear();\n    let month = startDate.getMonth() === currentDate.getMonth();\n    let day = startDate.getDate() === currentDate.getDate();\n\n    if (year && month && day) {\n      return true;\n    }\n  }\n\n  if (startDate.getTime() !== endDate.getTime()) {\n    while (startDate.getTime() !== endDate.getTime()) {\n      let year = startDate.getFullYear() === currentDate.getFullYear();\n      let month = startDate.getMonth() === currentDate.getMonth();\n      let day = startDate.getDate() === currentDate.getDate();\n\n      if (year && month && day) {\n        return true;\n      }\n      startDate.setDate(startDate.getDate() + 1);\n    }\n\n    //   console.log(currentDate, startDate, endDate)\n    let year = startDate.getFullYear() === currentDate.getFullYear();\n    let month = startDate.getMonth() === currentDate.getMonth();\n    let day = startDate.getDate() === currentDate.getDate();\n\n    if (year && month && day) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\n// part of the code reference from https://www.w3schools.com/jsref/jsref_getday.asp\nDateHelperModel.getDaysOfWeek = (startDate, endDate) => {\n  const daysOfweek = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n  let result = [];\n  let i = 0;\n\n  result[i++] = daysOfweek[startDate.getDay()];\n\n  while (startDate.getTime() !== endDate.getTime()) {\n    startDate.setDate(startDate.getDate() + 1);\n    result[i++] = daysOfweek[startDate.getDay()];\n  }\n\n  return result;\n\n  // let test= new Date(\"2021/12/1\")\n  // let test1= new Date(\"2021/12/2\")\n  // console.log(test.setDate(test.getDate() +1))\n  // console.log(test.getDate() === test1.getDate())\n  // console.log(test.getDay())\n  // console.log(test, test1)\n};\n\nmodule.exports = DateHelperModel;\n","export default function EventDetail(props) {\n  let results = [];\n  let i = 0;\n\n  for (let key in props.detail) {\n    if (key === \"daysOfWeek\") {\n      results[i++] = (\n        <div className=\"d-flex flex-wrap text-dark gap-3 me-5 my-3\">\n          <div className=\"\">\n            <b>Active on:</b>\n          </div>\n          <div className=\"d-flex flex-wrap gap-3\">\n            {props.detail[key].map((day) => (\n              <div className=\"\">{day}</div>\n            ))}\n          </div>\n        </div>\n      );\n    } else {\n      results[i++] = (\n        <div className=\"d-flex flex-wrap text-dark gap-3 me-5 my-3\">\n          <div className=\"\">\n            <b>{key.charAt(0).toUpperCase() + key.slice(1).toLowerCase()}:</b>\n          </div>\n          <div className=\"\">{props.detail[key]}</div>\n        </div>\n      );\n    }\n  }\n\n  return <div className=\"d-flex flex-wrap w-100 font-monospace fs-5\">{results}</div>;\n}\n","\nexport default function EventImage(props){\n    return(\n        <div className=\"ratio ratio-1x1\">\n            <img src={props.image} alt=\"event\" style={{objectFit: \"contain\"}}/>\n        </div>\n    )\n}","import { HiLocationMarker } from \"react-icons/hi\"\nimport { Link } from \"react-router-dom\"\nimport { MdPersonPin } from \"react-icons/md\"\nimport { MdDescription } from \"react-icons/md\"\nimport { IoArrowBackCircle } from \"react-icons/io5\"\n\nexport default function EventButton(props) {\n\n  return (\n    <div className=\"d-flex flex-wrap gap-4\">\n      <a href=\"#user\" className=\"text-decoration-none d-flex flex-column fs-5\">\n        <div className=\"text-center\">\n          <MdPersonPin />\n        </div>\n        <div className=\"\">Contacts</div>\n      </a>\n      <a href=\"#description\" className=\"text-decoration-none d-flex flex-column fs-5\">\n        <div className=\"text-center\">\n          <MdDescription />\n        </div>\n        <div className=\"\">Description</div>\n      </a>\n      <a href=\"#location\" className=\"text-decoration-none d-flex flex-column fs-5\">\n        <div className=\"text-center\">\n          <HiLocationMarker />\n        </div>\n        <div className=\"\">Location</div>\n      </a>\n      <Link to=\"/event\" className=\"text-decoration-none d-flex flex-column fs-5\">\n        <div className=\"text-center\">\n          <IoArrowBackCircle />\n        </div>\n        <div className=\"\">Events</div>\n      </Link>\n    </div>\n  );\n}\n","import { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\n\nexport default function EventLocation(props) {\n  const mapStyles = {\n    height: \"100%\",\n    width: \"100%\",\n  };\n\n  let locDetails = [];\n  let i = 0;\n  for (let key in props.locDetails) {\n    locDetails[i++]=(<div className=\"d-flex flex-wrap gap-4\">\n      <div className=\"fw-bold\">{key.charAt(0).toUpperCase() + key.slice(1).toLowerCase()}:</div>\n      <div className=\"\">{props.locDetails[key]}</div>\n    </div>)\n  }\n\n  return (\n    <div className=\"row g-5 fs-4\">\n      <div className=\"col-md-5\">\n        <div className=\"ratio ratio-1x1\">\n          {props.center && (\n            <LoadScript googleMapsApiKey=\"AIzaSyD83drqxn_tmCcwf8NB1_vNwed9BRkU1VE\">\n              <GoogleMap\n                mapContainerStyle={mapStyles}\n                zoom={18}\n                center={props.center}\n              >\n                <Marker key={props.address} position={props.center} />\n              </GoogleMap>\n            </LoadScript>\n          )}\n        </div>\n        {/* <!-- //this code is obtained from google api\n//https://www.youtube.com/watch?v=29Dp2mSwS4w for learning how to use axios\n//https://developers.google.com/maps/documentation/javascript/adding-a-google-map for the marker and init map\n//https://developer.mapquest.com/documentation/open/geocoding-api/ how to use geocode here --> */}\n      </div>\n      <div className=\"col-md-7\">\n        <div className=\"d-flex flex-column gap-4\">\n          <div className=\"d-flex flex-wrap gap-4\">\n            <div className=\"fw-bold\">Location:</div>\n            <div className=\"\">{props.address}</div>\n          </div>\n          {locDetails}\n          {/* <EventDetail detail={props.detail} /> */}\n        </div>\n      </div>\n    </div>\n  );\n}\n","export default function EventUser(props) {\n  const showItems = [\"name\", \"email\", \"phone\"];\n\n  let userInfo = [];\n\n  if (props.user) {\n    for (let i = 0; i < showItems.length; i += 1) {\n      let key = showItems[i];\n      userInfo[i] = (\n        <div className=\"d-flex flex-wrap gap-4 me-5 mb-3\">\n          <div className=\"fw-bold\">\n            {key.charAt(0).toUpperCase() + key.slice(1).toLowerCase()}:\n          </div>\n          <div className=\"\">{props.user[key]}</div>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <div className=\"d-flex flex-column gap-4 fs-4\">\n      <div className=\"d-flex flex-wrap gap-5\">\n        <div className=\"fw-bolder fs-3\">Contact Info:</div>\n      </div>\n      <hr className=\"p-0 m-0\"/>\n      <div className=\"d-flex flex-wrap\">{userInfo}</div>\n      <div className=\"blockquote-footer\">\n        Please do not spam nor harass the poster \n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react'\n\nimport DiscussionBoard from 'react-discussion-board'\n\nimport 'react-discussion-board/dist/index.css'\n\n\nconst EventTicket = () => {\n  \n  const allPosts = [\n    {\n      profileImage:\n        'https://www.rd.com/wp-content/uploads/2017/09/01-shutterstock_476340928-Irina-Bg.jpg',\n      name: 'Jane Doe',\n      content: '<p>$selling 2 tickets for 200</p><p>call 415 519 3567</p><p>-Jane</>',\n      date: new Date('01 Jan 2020 01:12:00 GMT')\n    },\n    {\n      profileImage:\n        'https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500',\n      name: 'John Doe',\n      content:\n        '<p>120 dollars for ticket, if you want contact 615-215-3456</p>',\n      date: new Date('01 Jan 2020 09:12:00 GMT')\n    }\n  ]\n\n  const [posts, setPosts] = useState(allPosts)\n\n  const submitPost = (text) => {\n    const curDate = new Date()\n\n    setPosts([\n      ...posts,\n      {\n        profileImage:\n          'https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500',\n        name: 'Jane Doe',\n        content: text,\n        date: curDate\n      }\n    ])\n  }\n\n  return (\n    <div className=\"App\">\n      <DiscussionBoard posts={posts} onSubmit={submitPost}/>\n    </div>\n  )\n}\n\nexport default EventTicket\n","import EventDetail from \"./page-components/EventDetail\";\nimport EventImage from \"./page-components/EventImage\";\n\nimport EventButton from \"./page-components/EventButton\";\nimport EventLocation from \"./page-components/EventLocation\";\nimport EventUser from \"./page-components/EventUser\";\nimport EventTicket from \"./page-components/EventTicket\";\n\nexport default function EventPage(props) {\n\n  //changes the title of the page\n  if (document.getElementById(\"pageTitle\")) {\n    document.getElementById(\"pageTitle\").innerHTML = \"4List - \" + props.title;\n  }\n  return (\n    <div className=\"container-xxl d-flex flex-column gap-4\">\n      <div className=\"row g-4\">\n        <div className=\"col-md-8\">\n          <div className=\"fs-1 fw-bold\">{props.title}</div>\n        </div>\n        <div className=\"col-md-4\">\n          <div className=\"d-flex justify-content-md-end\">\n            <EventButton />\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <EventDetail detail={props.details} />\n        </div>\n      </div>\n      <hr />\n      <div className=\"row g-5 mb-4\" id=\"description\">\n        <div className=\"col-md-5\">\n          <EventImage image={props.image} />\n        </div>\n        <div className=\"col-md-7\">\n          <div className=\"row\">\n            <div className=\"col-12 fs-4 lh-lg\">{props.description}</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row g-5 mb-5\" id=\"location\">\n        <div className=\"col-12\">\n          <EventLocation\n            address={props.address}\n            locDetails={props.locDetails}\n            center={props.center}\n            detail={props.details}\n          />\n        </div>\n      </div>\n      <div className=\"row g-5 mb-5\" id=\"user\">\n        <div className=\"col-12 fs-3\">\n          <EventUser user={props.user} />\n        </div>\n      </div>\n      <div className=\"row g-5 mb-5\" id=\"user\">\n        <div className=\"col-12 fs-3\">\n          Ticket Negotitation\n        </div>\n      </div>\n      <EventTicket/>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\n//Views\nimport EventPageView from \"../views/EventPage\";\n\n//Models\nconst axios = require(\"axios\");\nconst EventModel = require(\"../models/EventModel.js\");\n\nexport default function EventPage() {\n  const [data, setData] = useState(() => []);\n  const [center, setCenter] = useState(() => null);\n  const [user, setUser] = useState(() => null);\n  const parameter = useParams()[\"id\"];\n  const history = useHistory();\n\n  useEffect(() => {\n    fetch(\"/db/events.txt\")\n      .then((response) => response.text())\n      .then((data) => {\n        // Do something with your data\n        const temp = JSON.parse(data).filter((card) => {\n          return card[\"id\"] === parameter;\n        })[0];\n\n        setData(temp);\n        const address = temp[\"address\"];\n\n        //get the poster info from a list of users\n        fetch(\"/db/users.txt\")\n          .then((response) => response.text())\n          .then((data) => {\n            // find the matching user info\n            const temp1 = JSON.parse(data).filter((card) => {\n              return card[\"userId\"] === temp[\"userId\"];\n            })[0];\n            setUser(temp1);\n          });\n\n        //this code is referenced from google api\n        //https://www.youtube.com/watch?v=29Dp2mSwS4w for learning how to use axios\n        //https://developers.google.com/maps/documentation/javascript/adding-a-google-map for the marker and init map\n        //https://developer.mapquest.com/documentation/open/geocoding-api/ how to use geocode here\n        //get location from geocode\n        axios\n          .get(\"https://maps.googleapis.com/maps/api/geocode/json\", {\n            params: {\n              address: address,\n              key: \"AIzaSyD83drqxn_tmCcwf8NB1_vNwed9BRkU1VE\",\n            },\n          })\n          .then(function (response) {\n            setCenter(response.data.results[0].geometry.location);\n          });\n      });\n  }, [parameter]);\n\n  //revert back to old page if not found\n  if (!data) {\n    history.replace(\"/event\");\n    return history.go(0);\n  }\n\n  //four element a view needs\n  const id= data[\"id\"]\n  const image = \"/images/\" + data[\"image\"];\n  const details = EventModel.getDetails(data);\n  const title = EventModel.addDateToTitle(data[\"startDate\"], data[\"endDate\"], data[\"title\"])\n  const description = data[\"description\"];\n  const address = data[\"address\"];\n  const locDetails = { place: data[\"place\"], parking: data[\"parking\"] };\n\n  return (\n    <EventPageView\n      id={id}\n      title={title}\n      details={details}\n      description={description}\n      address={address}\n      image={image}\n      center={center}\n      locDetails={locDetails}\n      user={user}\n    />\n  );\n}\n"],"sourceRoot":""}