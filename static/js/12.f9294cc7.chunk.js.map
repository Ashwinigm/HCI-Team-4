{"version":3,"sources":["../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/Image.js","components/login.js"],"names":["DEVICE_SIZES","Row","React","ref","bsPrefix","className","as","Component","props","decoratedBsPrefix","useBootstrapPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","_jsx","classNames","displayName","Button","variant","size","active","prefix","useButtonProps","tagName","buttonProps","href","disabled","defaultProps","Image","PropTypes","string","bool","fluid","rounded","roundedCircle","thumbnail","Login","history","useHistory","Container","Col","md","lg","xxl","onSubmit","event","setLogin","Math","random","sessionStorage","setItem","preventDefault","goBack","style","fontWeight","id","color","htmlFor","type","src","role"],"mappings":"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","file":"static/js/12.f9294cc7.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ...buttonProps,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const propTypes = {\n  /**\n   * @default 'img'\n   */\n  bsPrefix: PropTypes.string,\n\n  /**\n   * Sets image as fluid image.\n   */\n  fluid: PropTypes.bool,\n\n  /**\n   * Sets image shape as rounded.\n   */\n  rounded: PropTypes.bool,\n\n  /**\n   * Sets image shape as circle.\n   */\n  roundedCircle: PropTypes.bool,\n\n  /**\n   * Sets image shape as thumbnail.\n   */\n  thumbnail: PropTypes.bool\n};\nconst defaultProps = {\n  fluid: false,\n  rounded: false,\n  roundedCircle: false,\n  thumbnail: false\n};\nconst Image = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  fluid,\n  rounded,\n  roundedCircle,\n  thumbnail,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  return /*#__PURE__*/_jsx(\"img\", {\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid && `${bsPrefix}-fluid`, rounded && `rounded`, roundedCircle && `rounded-circle`, thumbnail && `${bsPrefix}-thumbnail`)\n  });\n});\nImage.displayName = 'Image';\nImage.defaultProps = defaultProps;\nexport default Image;","import React, { Component } from 'react'\nimport {\n  Container,\n  Row,\n  Col,\n  Navbar,\n  Nav,\n  Form,\n  Button,\n  Grid,\n  p,\n  Image,\n} from 'react-bootstrap'\nimport './login.css'\n\nimport { useHistory } from 'react-router-dom'\n\nimport Logo from '../images/Logo.png'\n\nconst Login = (props) => {\n  const history = useHistory()\n\n  function login(event) {\n    props.setLogin(Math.random())\n    sessionStorage.setItem('cookie', true)\n    event.preventDefault()\n    history.goBack()\n  }\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Col md=\"8\" lg=\"7\" xxl=\"6\" className=\"d-flex flex-column gap-4\">\n          <form onSubmit={login}>\n            <p className=\"h4 text-center mb-4\">LOGIN</p>\n            <label\n              style={{ fontWeight: 'bold' }}\n              className=\"black-text text-left \"\n            >\n              Username\n            </label>\n            <input id=\"inputs\" className=\"form-control py-3 fs-4\" color=\"grey\" />\n            <br />\n            <label\n              htmlFor=\"defaultFormLoginPasswordEx\"\n              style={{ fontWeight: 'bold' }}\n              className=\"grey-text\"\n            >\n              Your password\n            </label>\n            <input type=\"password\" id=\"inputs\" className=\"form-control py-3 fs-4\" />\n            <p className=\"font-small blue-text d-flex py-3\">\n              <a href=\"#!\" className=\"blue-text ml-1\">\n                Forgot Password?\n              </a>\n            </p>\n            <div className=\"d-flex flex-column text-center mt-4 gap-4\">\n              <div className=\"d-flex flex-row align-items-center justify-content-center gap-4\">\n                <Image src=\"/HCI-Team-4/apple.png\" /> OR <Image src=\"/HCI-Team-4/Glogo.png\" />\n              </div>\n              <Button className=\"mx-auto\" type=\"submit\" id=\"Button\">\n                Login\n              </Button>\n            </div>\n            <div className=\"text-left mt-4 \">\n              Dont have an account?\n              <p className=\"font-small blue-text d-flex pb-3\">\n                <a role=\"button\" className=\"blue-text ml-1\">\n                  Sign Up\n                </a>\n              </p>\n            </div>\n          </form>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Login\n"],"sourceRoot":""}